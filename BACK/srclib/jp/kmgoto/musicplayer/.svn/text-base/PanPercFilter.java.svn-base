package jp.kmgoto.musicplayer;

import java.io.*;

public class PanPercFilter {
    public static final int THROUGH = 0;
    public static final int CANCEL  = 1;
    public static final int SPLIT   = 2;

    private float[] freqRanges;
    private int numPanRanges;
    private String[][] data; 
    private int[] findex; // fourierIndex to data index

    public PanPercFilter(){
    }

    public void setFreqRanges(float[] ranges){
       freqRanges = ranges; 
    }
    public void setNumPanRanges(int num){
      numPanRanges = num;
/*
      for (float pan = -1f; pan <= 1f; pan +=0.01){
        int index = ((int) ((pan + 1f)*(num-1)) + 1)/2;
        System.out.println(pan + ", " + index
             + "/" + (num - 1));
      }
*/
    }
   
    public void setData(String[][] inputData){
       data = inputData;
    }

    public void setFourierIndex(int windowSize, int samplingRate){
      findex = new int[windowSize/2+1];

      int index = 0;
      for (int i=0; i < windowSize/2 + 1; i++){
         float freq = (i*samplingRate)/(float) windowSize;
         if (freqRanges[index] > freq) {
           findex[i] = index;
         } else {
           findex[i] = index++;
         }
      }

    }

    public int getVerdict(int freqIndex, float pan){

//       System.out.println("getVerdict()");

       int i = findex[freqIndex]; // fourierIndex to data index
       int j = ((int) ((pan + 1f)*(numPanRanges-1)) + 1)/2;
       if (data[i][j].equals("t")){
/*
           System.out.println(
             "Through f: " + freqIndex + ", pan: " + pan);
*/
           return THROUGH;
       } else if (data[i][j].equals("c")){
/*
           System.out.println(
              "Cancel f: " + freqIndex + ", pan: " + pan);
*/
           return CANCEL;
       } else if (data[i][j].equals("s")){
           return SPLIT;
       }

       return THROUGH;
    }

    public void printContent(){
      System.err.println("#BEGIN freqRanges: " + freqRanges.length);

      for (int f = 0; f < freqRanges.length; f++){
        System.out.println(f + " " + freqRanges[f]);
      }

      System.err.println("#END freqRanges");
      System.err.println("#INFO numPanRanges: " + numPanRanges);
      System.err.println("#BEGIN data: freq pan value(str)");

      for (int f = 0; f < freqRanges.length; f++){
        for (int p = 0; p < numPanRanges; p++){
          System.err.println(f + " " + p + " " + data[f][p]);
        }
      }
      System.err.println("#END data");

    }

    public void saveContent(String outputFilePath){

    try {
      FileWriter fw = new FileWriter(outputFilePath); 

      fw.write("#BEGIN freqRanges: " + freqRanges.length + "\n");

      for (int f = 0; f < freqRanges.length; f++){
        fw.write(f + " " + freqRanges[f] + "\n");
      }

      fw.write("#END freqRanges: " + freqRanges.length + "\n");
      fw.write("#INFO numPanRanges: " + numPanRanges + "\n");
      fw.write("#BEGIN data: freq pan value(str)\n");

      for (int f = 0; f < freqRanges.length; f++){
        for (int p = 0; p < numPanRanges; p++){
          fw.write(f + " " + p + " " + data[f][p] + "\n");
        }
      }
      fw.write("#END data\n");
      fw.close();
     } catch(Exception e){e.printStackTrace();}

   }

   public void loadContent(String inputFilePath){
    FileReader fr = null;
    BufferedReader br = null;
    try {
      fr = new FileReader(inputFilePath); 
      br = new BufferedReader(fr);
      String line;
      int state = 0;
      String[] var;
      while ((line = br.readLine()) != null){
     //   System.out.println(line);
        if (line.startsWith("#BEGIN freqRanges:")) { 
            var = line.split("\\s+");
            freqRanges = new float[Integer.parseInt(var[2])];
     //       System.out.println("Set # of freqRanges " + freqRanges.length);
            state = 1; 
            continue; 
        }
        if (line.startsWith("#INFO numPanRanges:")) { 
            var = line.split("\\s+");
            numPanRanges = Integer.parseInt(var[2]);
     //       System.out.println("Set numPanRanges " + numPanRanges);
            state = 1; 
            continue; 
        }

        if (line.startsWith("#BEGIN data:")) { 
          data = new String[freqRanges.length][numPanRanges];
          state = 2; 
          continue;
        }
        if (line.startsWith("#END")) { continue; }

        var = line.split("\\s+");
        switch(state){
          case 1: // read freqRanges
           freqRanges[Integer.parseInt(var[0])] = Float.parseFloat(var[1]);
           break;
          case 2: // read data
           data[Integer.parseInt(var[0])][Integer.parseInt(var[1])] = var[2];
           break;
          default:
        }
      }
    } catch(Exception e) { 
        e.printStackTrace();
    } finally {
       try {
         br.close(); fr.close();
       } catch (Exception e) {e.printStackTrace();}
    }
   }

}
